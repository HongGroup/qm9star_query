[tool.poetry]
name = "qm9star-query"
version = "0.1.0"
description = "A SQLModel-based repository dedicated to helping users access the PostgreSQL-based qm9star database more easily in a Python environment."
authors = ["tmj <mj_t@zju.edu.cn>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
sqlmodel = "^0.0.16"
psycopg = "^3.1.18"
pgvector = "^0.2.5"
psycopg2-binary = "^2.9.9"
tqdm = "^4.66.4"
torch-geometric = "^2.5.3"

pyg-lib = { url = "https://data.pyg.org/whl/torch-2.3.0%2Bcu121/pyg_lib-0.4.0%2Bpt23cu121-cp310-cp310-linux_x86_64.whl", optional = true }
torch-cluster = { url = "https://data.pyg.org/whl/torch-2.3.0%2Bcu121/torch_cluster-1.6.3%2Bpt23cu121-cp310-cp310-linux_x86_64.whl", optional = true }
torch-scatter = { url = "https://data.pyg.org/whl/torch-2.3.0%2Bcu121/torch_scatter-2.1.2%2Bpt23cu121-cp310-cp310-linux_x86_64.whl", optional = true }
torch-sparse = { url = "https://data.pyg.org/whl/torch-2.3.0%2Bcu121/torch_sparse-0.6.18%2Bpt23cu121-cp310-cp310-linux_x86_64.whl", optional = true }
torch-spline-conv = { url = "https://data.pyg.org/whl/torch-2.3.0%2Bcu121/torch_spline_conv-1.2.2%2Bpt23cu121-cp310-cp310-linux_x86_64.whl", optional = true }
networkx = { version = "^3.3", optional = true }
pymatgen = { version = "^2024.5.1", optional = true }
sympy = { version = "^1.12", optional = true }
e3fp = { version = "^1.2.5", optional = true }
tensorboard = { version = "^2.16.2", optional = true }
ase = { version = "^3.22.1", optional = true }
dive-into-graphs = { version = "^1.1.0", optional = true }
nff = { git = "https://github.com/learningmatter-mit/NeuralForceField.git", optional = true }
torch = "^2.3.0"
ipython = "^8.24.0"
setuptools = "^69.5.1"
packaging = "^24.0"
ipykernel = "^6.29.4"
rdkit = "^2023.9.6"
pint = "^0.23"
uvicorn = { extras = ["standard"], version = "^0.34.0", optional = true }
fastapi = { version = "^0.115.8", optional = true }
fastapi-scheduler = { version = "^0.0.15", optional = true }
python-multipart = { version = "^0.0.20", optional = true }
tenacity = { version = "^9.0.0", optional = true }
gunicorn = { version = "^23.0.0", optional = true }
jinja2 = { version = "^3.1.5", optional = true }
alembic = { version = "^1.14.1", optional = true }
pydantic-settings = "^2.7.1"

[tool.poetry.extras]
dl = [
    "ase",
    "pyg-lib",
    "torch-cluster",
    "torch-scatter",
    "torch-sparse",
    "torch-spline-conv",
    "networkx",
    "pymatgen",
    "sympy",
    "e3fp",
    "tensorboard",
    "dive-into-graphs",
    "nff",
]
api = [
    "uvicorn",
    "fastapi",
    "fastapi-scheduler",
    "python-multipart",
    "tenacity",
    "gunicorn",
    "jinja2",
    "alembic",
]
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
